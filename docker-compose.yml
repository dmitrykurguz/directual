version: '2.1'
services:
  nginx_proxy:
    image: nginx
    volumes:
      - "$PWD/nginx/nginx.conf:/etc/nginx/nginx.conf"
  web_ui:
    mem_limit: 1024M
    image: gitlab.directual.com:5005/devops/ops-mts-bank/platform/web-ui:plt-1132-ibmmq-integration
    env_file:
      - ./env/directual.env
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - postgres
      - redis
      - mongo
    volumes:
      - upload:/upload
    environment:
      JAVA_OPTS: "-server -Xms256M -Xmx1024M -XX:+AggressiveOpts -XX:ParallelGCThreads=4  -Xloggc:log/gc.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCCause -XX:+PrintGCApplicationStoppedTime -XX:-PrintTenuringDistribution -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=64M -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005"
      TELEGRAM_ENABLE: "false"
  processor:
    mem_limit: 1024M
    image: gitlab.directual.com:5005/devops/ops-mts-bank/platform/processor:plt-1132-ibmmq-integration
    env_file:
      - ./env/directual.env
    depends_on:
      - kafka
      - postgres
      - redis
      - mongo
      - redis_object_cache
    environment:
      JAVA_OPTS: "-server -Xms256m -Xmx1024m -Djava.rmi.server.hostname=0.0.0.0 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.rmi.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
    volumes:
      - upload:/upload
  distributor:
    mem_limit: 1024M
    image: gitlab.directual.com:5005/devops/ops-mts-bank/platform/distributor:2.1.2
    env_file:
      - ./env/directual.env
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      JAVA_OPTS: "-server -Xms256m -Xmx1024m -Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9014 -Dcom.sun.management.jmxremote.rmi.port=9014 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
  delay_processor:
    mem_limit: 1024M
    image: gitlab.directual.com:5005/devops/ops-mts-bank/platform/delay-processor:2.0.2
    env_file:
      - ./env/directual.env
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      JAVA_OPTS: "-server -Xms256m -Xmx1024m -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9012 -Dcom.sun.management.jmxremote.rmi.port=9012 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"
  operations:
    mem_limit: 1024M
    image: gitlab.directual.com:5005/devops/ops-mts-bank/platform/operations:2.1.3
    env_file:
      - ./env/directual.env
    depends_on:
      - postgres
      - redis
      - kafka
    environment:
      JAVA_OPTS: "-server -Xms256m -Xmx1024m -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9011 -Dcom.sun.management.jmxremote.rmi.port=9011 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=localhost"
### infra ###
  mongo:
    image: mongo:3.6
    command: --wiredTigerCacheSizeGB 1
    volumes:
      - mongo_conf:/data/configdb
      - mongo_data:/data/db
  redis:
    mem_limit: 256M
    image: redis:4
  redis_object_cache:
    mem_limit: 256M
    image: redis:4
  postgres:
    mem_limit: 256M
    image: postgres:9.5.1
    env_file:
      - ./env/pg.env
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
  zookeeper:
    mem_limit: 256M
    image: twwlf/zookeeper:3.4.11
    volumes:
      - zk_conf:/opt/zookeeper-3.4.11/conf
      - zk_data:/opt/zookeeper-3.4.11/data
  kafka:
    mem_limit: 1024M
    image: twwlf/kafka:1.1.0
    env_file:
      - ./env/kafka.local.env
    depends_on:
      - zookeeper
    volumes:
      - kafka:/kafka
  behave:
    image: gitlab.directual.com:5005/docker/behave
    depends_on:
      - web_ui
    volumes:
      - ${PWD}/behave/cases:/usr/src/app/behave
      - ${PWD}/reports:/usr/src/app/reports
    entrypoint: behave -D hub=http://selenoid:4444/wd/hub -Dapp_address=http://nginx_proxy:81 -f allure_behave.formatter:AllureFormatter -o /usr/src/app/reports
  selenoid:
    image: "aerokube/selenoid"
    command: -container-network ${COMPOSE_PROJECT_NAME}_default -enable-file-upload -timeout 5m
    volumes:
      - "$PWD/selenoid:/etc/selenoid/" 
      - "/var/run/docker.sock:/var/run/docker.sock"
volumes:
  kafka:
  zk_conf:
  zk_data:
  pgdata:
  mongo_conf:
  mongo_data:
  upload: